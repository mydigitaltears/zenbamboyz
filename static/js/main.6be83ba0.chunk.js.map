{"version":3,"sources":["fonts/Lacquer-Regular.ttf","fonts/Agra_Axera.ttf","components/Videos.js","Body.js","Header.js","components/Socials.js","components/Platforms.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Videos","className","src","frameBorder","allow","allowFullScreen","Body","Header","Socials","href","Platforms","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0KAAAA,EAAOC,QAAU,IAA0B,6C,mBCA3CD,EAAOC,QAAU,IAA0B,wC,oGCe5BC,MAbf,WACE,OACE,yBAAKC,UAAU,WACb,4BACEC,IAAI,yEACJC,YAAY,IACZC,MAAM,0EACNC,iBAAe,MCURC,MAZf,WACE,OACE,yBAAKL,UAAU,QAIX,kCACA,2CCQOM,MAhBf,WACI,OACI,gCACI,kBAAC,EAAD,MAOA,yCACA,kBAAC,EAAD,QCHGC,MAZf,WACE,OACE,yBAAKP,UAAU,WACb,4BACE,4BAAI,uBAAGQ,KAAK,sCAAR,aACJ,4BAAI,uBAAGA,KAAK,yCAAR,cACJ,4BAAI,uBAAGA,KAAK,mCAAR,gBCKGC,MAXf,WACE,OACE,yBAAKT,UAAU,aACb,4BACE,4BAAI,uBAAGQ,KAAK,0DAAR,YACJ,4BAAI,uBAAGA,KAAK,2DAAR,mBCMGE,MATf,WACE,OACE,gCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QCQSC,MATf,WACE,OACE,yBAAKX,UAAW,aACZ,kBAAC,EAAD,MACA,kBAAC,EAAD,QCCYY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCVNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.6be83ba0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Lacquer-Regular.7f33a1da.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Agra_Axera.753df9f7.ttf\";","import React from \"react\"\n\nfunction Videos () {\n  return (\n    <div className=\"youtube\">\n      <iframe\n        src=\"https://www.youtube.com/embed/JBHK2blzobA?autoplay=1;controls=0;loop=1\"\n        frameBorder=\"0\"\n        allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen>\n      </iframe>\n    </div>\n  )\n}\n\nexport default Videos\n","import React from \"react\"\nimport Music from \"./components/Music\"\nimport Videos from \"./components/Videos\"\nimport Shows from \"./components/Shows\"\nimport Contacts from \"./components/Contacts\"\nimport Vplayer from \"./components/Vplayer.js\"\n\nfunction Body () {\n  return (\n    <div className=\"budy\">\n        {//<div className=\"mainPage\">\n        //</div>\n        }\n        <p>GLU</p>\n        <p>27/03/2020</p>\n    </div>\n  )\n}\n\nexport default Body\n","import React from \"react\"\nimport Navbar from \"./components/Navbar\"\nimport Vplayer from \"./components/Vplayer\"\nimport Videos from \"./components/Videos\"\nimport Body from \"./Body\"\n\nfunction Header() {\n    return (\n        <header>\n            <Videos />\n            {/*}<img\n                src=\"http://www.pngall.com/wp-content/uploads/2016/05/Trollface.png\"\n                alt=\"Problem?\"\n                PUT LOGO HERE\n            />*/\n          }\n            <p>ZENBAMBOYZ</p>\n            <Body />\n        </header>\n    )\n}\n\nexport default Header\n","import React from \"react\"\n\nfunction Socials () {\n  return (\n    <div className=\"socials\">\n      <ul>\n        <li><a href=\"https://www.facebook.com/zenbamboo\">Facebook</a></li>\n        <li><a href=\"https://www.instagram.com/zenbamboyz/\">Instagram</a></li>\n        <li><a href=\"https://zenbamboo.bandcamp.com/\">Bandcamp</a></li>\n      </ul>\n    </div>\n  )\n}\n\nexport default Socials\n","import React from \"react\"\n\nfunction Platforms () {\n  return (\n    <div className=\"platforms\">\n      <ul>\n        <li><a href=\"https://open.spotify.com/artist/2MXXBapWuqQrB4IiwXuZAh\">Spotify</a></li>\n        <li><a href=\"https://music.apple.com/ca/artist/zen-bamboo/1273236010\">Apple Music</a></li>\n      </ul>\n    </div>\n  )\n}\n\nexport default Platforms\n","import React from \"react\"\nimport Socials from \"./components/Socials\"\nimport Platforms from \"./components/Platforms\"\n\nfunction Footer () {\n  return (\n    <footer>\n      <Socials />\n      <Platforms />\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport Header from \"./Header\"\nimport Body from \"./Body\"\nimport Footer from \"./Footer\"\n\nfunction App() {\n  return (\n    <div className =\"container\">\n        <Header />\n        <Footer />\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './fonts/Lacquer-Regular.ttf';\nimport './fonts/Agra_Axera.ttf';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}